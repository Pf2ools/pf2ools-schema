// This file was generated by scripts/generate-zod-combinedTypes.js at Sun, 11 Feb 2024 12:07:27 GMT

import { z } from "zod";

import { license } from "./license.js";
import { source } from "./source.js";
import { sourceGroup } from "./sourceGroup.js";
import { background } from "./content/background.js";
import { condition } from "./content/condition.js";
import { divineIntercession } from "./content/divineIntercession.js";
import { domain } from "./content/domain.js";
import { event } from "./content/event.js";
import { familiarAbility } from "./content/familiarAbility.js";
import { relicGift } from "./content/relicGift.js";
import { skill } from "./content/skill.js";

export const data = z.discriminatedUnion("type", [
	license,
	source,
	sourceGroup,
	background,
	condition,
	divineIntercession,
	domain,
	event,
	familiarAbility,
	relicGift,
	skill,
]);

export const schemaIndex = {
	license: license.array().min(1).optional(),
	source: source.array().min(1).optional(),
	sourceGroup: sourceGroup.array().min(1).optional(),
	background: background.array().min(1).optional(),
	condition: condition.array().min(1).optional(),
	divineIntercession: divineIntercession.array().min(1).optional(),
	domain: domain.array().min(1).optional(),
	event: event.array().min(1).optional(),
	familiarAbility: familiarAbility.array().min(1).optional(),
	relicGift: relicGift.array().min(1).optional(),
	skill: skill.array().min(1).optional(),
}