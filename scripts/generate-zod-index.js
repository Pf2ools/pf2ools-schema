#! /usr/bin/env node

import chalk from "chalk";
import { Command } from "commander";
import fs from "fs";
import path from "path/posix";
import { generateZodScriptInitialiser } from "./utils/generateZodScriptInitialiser.js";

// Define CLI
const program = new Command()
	.summary("generate combined zod files for pf2ools-schema")
	.description(
		"Generates a TypeScript index file from recognised metafile, content, and combined datatypes. All `.ts` files in a directory are included, even if they aren't zod declarations. A schema export is assumed to have the same name as its file, plus a possible prepended underscore.",
	)
	.argument("<path>", "Directory")
	.option("-r, --recurse", "Find zod files recursively")
	.option("-e, --exclude <paths...>", "Paths to files or directories that should be excluded")
	.parse(process.argv);

const { relativeFiles, zodDir } = generateZodScriptInitialiser(program);

let indexTS = `// This file was generated by scripts/generate-zod-index.js at ${new Date().toUTCString()}\n`;
let lastDir;
for (const file of relativeFiles) {
	if (!lastDir || lastDir !== path.dirname(file)) {
		lastDir = path.dirname(file);
		indexTS += `\n// ${path.dirname(file).replace(/^.*\//, "")}\n`;
	}
	indexTS += `export { ${path.basename(file, ".ts").replace(/^_/, "")} } from "./${file.replace(
		/\.ts$/,
		"",
	)}.js";\n`;
}
fs.writeFileSync(`${zodDir}/_index.ts`, indexTS);
console.log(chalk.green("Index file generated"));
